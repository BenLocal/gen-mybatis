# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: "8"
          distribution: "temurin"
          cache: maven
      - name: Start MySQL with Docker Compose
        run: docker compose up -d
      - name: Wait for MySQL to start
        run: |
          echo "Waiting for MySQL to start..."
          # Wait up to 30 seconds for MySQL to be ready
          timeout=30
          while ! docker exec gen_mysql mysqladmin -h localhost -u root -proot ping --silent &> /dev/null; do
            if [ $timeout -le 0 ]; then
              echo "Timeout reached. MySQL may not be ready."
              exit 1
            fi
            timeout=$(($timeout - 1))
            sleep 1
          done
          echo "MySQL is ready!"
          sleep 20

      - name: Initialize database
        run: |
          # Copy the SQL file to the container
          docker cp gen-mybatis-example/src/main/resources/table.sql gen_mysql:/tmp/db.sql
          # Execute the SQL file
          docker exec gen_mysql mysql -u root -p'root' -e "SOURCE /tmp/db.sql;"

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
